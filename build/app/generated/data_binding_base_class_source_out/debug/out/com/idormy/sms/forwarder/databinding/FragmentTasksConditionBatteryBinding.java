// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.picker.XSeekBar;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTasksConditionBatteryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final RadioButton rbBatteryCharging;

  @NonNull
  public final RadioButton rbBatteryDischarging;

  @NonNull
  public final RadioGroup rgStatus;

  @NonNull
  public final SwitchButton sbKeepReminding;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final XSeekBar xsbLevelMax;

  @NonNull
  public final XSeekBar xsbLevelMin;

  private FragmentTasksConditionBatteryBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave,
      @NonNull RadioButton rbBatteryCharging, @NonNull RadioButton rbBatteryDischarging,
      @NonNull RadioGroup rgStatus, @NonNull SwitchButton sbKeepReminding,
      @NonNull TextView tvDescription, @NonNull XSeekBar xsbLevelMax,
      @NonNull XSeekBar xsbLevelMin) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.rbBatteryCharging = rbBatteryCharging;
    this.rbBatteryDischarging = rbBatteryDischarging;
    this.rgStatus = rgStatus;
    this.sbKeepReminding = sbKeepReminding;
    this.tvDescription = tvDescription;
    this.xsbLevelMax = xsbLevelMax;
    this.xsbLevelMin = xsbLevelMin;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTasksConditionBatteryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTasksConditionBatteryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tasks_condition_battery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTasksConditionBatteryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.rb_battery_charging;
      RadioButton rbBatteryCharging = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryCharging == null) {
        break missingId;
      }

      id = R.id.rb_battery_discharging;
      RadioButton rbBatteryDischarging = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryDischarging == null) {
        break missingId;
      }

      id = R.id.rg_status;
      RadioGroup rgStatus = ViewBindings.findChildViewById(rootView, id);
      if (rgStatus == null) {
        break missingId;
      }

      id = R.id.sb_keep_reminding;
      SwitchButton sbKeepReminding = ViewBindings.findChildViewById(rootView, id);
      if (sbKeepReminding == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.xsb_level_max;
      XSeekBar xsbLevelMax = ViewBindings.findChildViewById(rootView, id);
      if (xsbLevelMax == null) {
        break missingId;
      }

      id = R.id.xsb_level_min;
      XSeekBar xsbLevelMin = ViewBindings.findChildViewById(rootView, id);
      if (xsbLevelMin == null) {
        break missingId;
      }

      return new FragmentTasksConditionBatteryBinding((LinearLayout) rootView, btnDel, btnSave,
          rbBatteryCharging, rbBatteryDischarging, rgStatus, sbKeepReminding, tvDescription,
          xsbLevelMax, xsbLevelMin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
