// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.alpha.XUIAlphaImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class IncludeToolbarWebBinding implements ViewBinding {
  @NonNull
  private final Toolbar rootView;

  @NonNull
  public final XUIAlphaImageView ivBack;

  @NonNull
  public final XUIAlphaImageView ivFinish;

  @NonNull
  public final XUIAlphaImageView ivMore;

  @NonNull
  public final TextView toolbarTitle;

  @NonNull
  public final View viewLine;

  private IncludeToolbarWebBinding(@NonNull Toolbar rootView, @NonNull XUIAlphaImageView ivBack,
      @NonNull XUIAlphaImageView ivFinish, @NonNull XUIAlphaImageView ivMore,
      @NonNull TextView toolbarTitle, @NonNull View viewLine) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.ivFinish = ivFinish;
    this.ivMore = ivMore;
    this.toolbarTitle = toolbarTitle;
    this.viewLine = viewLine;
  }

  @Override
  @NonNull
  public Toolbar getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeToolbarWebBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeToolbarWebBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_toolbar_web, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeToolbarWebBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_back;
      XUIAlphaImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_finish;
      XUIAlphaImageView ivFinish = ViewBindings.findChildViewById(rootView, id);
      if (ivFinish == null) {
        break missingId;
      }

      id = R.id.iv_more;
      XUIAlphaImageView ivMore = ViewBindings.findChildViewById(rootView, id);
      if (ivMore == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.view_line;
      View viewLine = ViewBindings.findChildViewById(rootView, id);
      if (viewLine == null) {
        break missingId;
      }

      return new IncludeToolbarWebBinding((Toolbar) rootView, ivBack, ivFinish, ivMore,
          toolbarTitle, viewLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
