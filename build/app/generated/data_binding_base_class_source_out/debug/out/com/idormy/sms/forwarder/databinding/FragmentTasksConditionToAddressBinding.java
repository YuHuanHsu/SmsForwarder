// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.shadowbutton.RippleShadowShadowButton;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTasksConditionToAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RippleShadowShadowButton btnCurrentCoordinates;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final EditText etAddress;

  @NonNull
  public final EditText etDistance;

  @NonNull
  public final EditText etLatitude;

  @NonNull
  public final EditText etLongitude;

  @NonNull
  public final LinearLayout layoutCalcTypeAddress;

  @NonNull
  public final LinearLayout layoutCalcTypeDistance;

  @NonNull
  public final RadioButton rbCalcTypeAddress;

  @NonNull
  public final RadioButton rbCalcTypeDistance;

  @NonNull
  public final RadioGroup rgCalcType;

  @NonNull
  public final TextView tvDescription;

  private FragmentTasksConditionToAddressBinding(@NonNull LinearLayout rootView,
      @NonNull RippleShadowShadowButton btnCurrentCoordinates, @NonNull SuperButton btnDel,
      @NonNull SuperButton btnSave, @NonNull EditText etAddress, @NonNull EditText etDistance,
      @NonNull EditText etLatitude, @NonNull EditText etLongitude,
      @NonNull LinearLayout layoutCalcTypeAddress, @NonNull LinearLayout layoutCalcTypeDistance,
      @NonNull RadioButton rbCalcTypeAddress, @NonNull RadioButton rbCalcTypeDistance,
      @NonNull RadioGroup rgCalcType, @NonNull TextView tvDescription) {
    this.rootView = rootView;
    this.btnCurrentCoordinates = btnCurrentCoordinates;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.etAddress = etAddress;
    this.etDistance = etDistance;
    this.etLatitude = etLatitude;
    this.etLongitude = etLongitude;
    this.layoutCalcTypeAddress = layoutCalcTypeAddress;
    this.layoutCalcTypeDistance = layoutCalcTypeDistance;
    this.rbCalcTypeAddress = rbCalcTypeAddress;
    this.rbCalcTypeDistance = rbCalcTypeDistance;
    this.rgCalcType = rgCalcType;
    this.tvDescription = tvDescription;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTasksConditionToAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTasksConditionToAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tasks_condition_to_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTasksConditionToAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_current_coordinates;
      RippleShadowShadowButton btnCurrentCoordinates = ViewBindings.findChildViewById(rootView, id);
      if (btnCurrentCoordinates == null) {
        break missingId;
      }

      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.et_address;
      EditText etAddress = ViewBindings.findChildViewById(rootView, id);
      if (etAddress == null) {
        break missingId;
      }

      id = R.id.et_distance;
      EditText etDistance = ViewBindings.findChildViewById(rootView, id);
      if (etDistance == null) {
        break missingId;
      }

      id = R.id.et_latitude;
      EditText etLatitude = ViewBindings.findChildViewById(rootView, id);
      if (etLatitude == null) {
        break missingId;
      }

      id = R.id.et_longitude;
      EditText etLongitude = ViewBindings.findChildViewById(rootView, id);
      if (etLongitude == null) {
        break missingId;
      }

      id = R.id.layout_calc_type_address;
      LinearLayout layoutCalcTypeAddress = ViewBindings.findChildViewById(rootView, id);
      if (layoutCalcTypeAddress == null) {
        break missingId;
      }

      id = R.id.layout_calc_type_distance;
      LinearLayout layoutCalcTypeDistance = ViewBindings.findChildViewById(rootView, id);
      if (layoutCalcTypeDistance == null) {
        break missingId;
      }

      id = R.id.rb_calc_type_address;
      RadioButton rbCalcTypeAddress = ViewBindings.findChildViewById(rootView, id);
      if (rbCalcTypeAddress == null) {
        break missingId;
      }

      id = R.id.rb_calc_type_distance;
      RadioButton rbCalcTypeDistance = ViewBindings.findChildViewById(rootView, id);
      if (rbCalcTypeDistance == null) {
        break missingId;
      }

      id = R.id.rg_calc_type;
      RadioGroup rgCalcType = ViewBindings.findChildViewById(rootView, id);
      if (rgCalcType == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      return new FragmentTasksConditionToAddressBinding((LinearLayout) rootView,
          btnCurrentCoordinates, btnDel, btnSave, etAddress, etDistance, etLatitude, etLongitude,
          layoutCalcTypeAddress, layoutCalcTypeDistance, rbCalcTypeAddress, rbCalcTypeDistance,
          rgCalcType, tvDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
