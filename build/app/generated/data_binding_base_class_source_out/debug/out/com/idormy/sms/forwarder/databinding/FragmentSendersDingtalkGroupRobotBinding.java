// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersDingtalkGroupRobotBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etAtDingtalkIds;

  @NonNull
  public final MaterialEditText etAtMobiles;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etSecret;

  @NonNull
  public final MaterialEditText etTitleTemplate;

  @NonNull
  public final MaterialEditText etToken;

  @NonNull
  public final GridLayout glTitleTemplate;

  @NonNull
  public final LinearLayout layoutAtDingtalkIds;

  @NonNull
  public final LinearLayout layoutAtMobiles;

  @NonNull
  public final LinearLayout layoutCustomTemplate;

  @NonNull
  public final RadioButton rbMsgTypeMarkdown;

  @NonNull
  public final RadioButton rbMsgTypeText;

  @NonNull
  public final RadioGroup rgMsgType;

  @NonNull
  public final SwitchButton sbAtAll;

  @NonNull
  public final SwitchButton sbEnable;

  private FragmentSendersDingtalkGroupRobotBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave, @NonNull SuperButton btnTest,
      @NonNull MaterialEditText etAtDingtalkIds, @NonNull MaterialEditText etAtMobiles,
      @NonNull MaterialEditText etName, @NonNull MaterialEditText etSecret,
      @NonNull MaterialEditText etTitleTemplate, @NonNull MaterialEditText etToken,
      @NonNull GridLayout glTitleTemplate, @NonNull LinearLayout layoutAtDingtalkIds,
      @NonNull LinearLayout layoutAtMobiles, @NonNull LinearLayout layoutCustomTemplate,
      @NonNull RadioButton rbMsgTypeMarkdown, @NonNull RadioButton rbMsgTypeText,
      @NonNull RadioGroup rgMsgType, @NonNull SwitchButton sbAtAll,
      @NonNull SwitchButton sbEnable) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etAtDingtalkIds = etAtDingtalkIds;
    this.etAtMobiles = etAtMobiles;
    this.etName = etName;
    this.etSecret = etSecret;
    this.etTitleTemplate = etTitleTemplate;
    this.etToken = etToken;
    this.glTitleTemplate = glTitleTemplate;
    this.layoutAtDingtalkIds = layoutAtDingtalkIds;
    this.layoutAtMobiles = layoutAtMobiles;
    this.layoutCustomTemplate = layoutCustomTemplate;
    this.rbMsgTypeMarkdown = rbMsgTypeMarkdown;
    this.rbMsgTypeText = rbMsgTypeText;
    this.rgMsgType = rgMsgType;
    this.sbAtAll = sbAtAll;
    this.sbEnable = sbEnable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersDingtalkGroupRobotBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersDingtalkGroupRobotBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_dingtalk_group_robot, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersDingtalkGroupRobotBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_at_dingtalk_ids;
      MaterialEditText etAtDingtalkIds = ViewBindings.findChildViewById(rootView, id);
      if (etAtDingtalkIds == null) {
        break missingId;
      }

      id = R.id.et_at_mobiles;
      MaterialEditText etAtMobiles = ViewBindings.findChildViewById(rootView, id);
      if (etAtMobiles == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_secret;
      MaterialEditText etSecret = ViewBindings.findChildViewById(rootView, id);
      if (etSecret == null) {
        break missingId;
      }

      id = R.id.et_title_template;
      MaterialEditText etTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (etTitleTemplate == null) {
        break missingId;
      }

      id = R.id.et_token;
      MaterialEditText etToken = ViewBindings.findChildViewById(rootView, id);
      if (etToken == null) {
        break missingId;
      }

      id = R.id.gl_title_template;
      GridLayout glTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (glTitleTemplate == null) {
        break missingId;
      }

      id = R.id.layout_at_dingtalk_ids;
      LinearLayout layoutAtDingtalkIds = ViewBindings.findChildViewById(rootView, id);
      if (layoutAtDingtalkIds == null) {
        break missingId;
      }

      id = R.id.layout_at_mobiles;
      LinearLayout layoutAtMobiles = ViewBindings.findChildViewById(rootView, id);
      if (layoutAtMobiles == null) {
        break missingId;
      }

      id = R.id.layout_custom_template;
      LinearLayout layoutCustomTemplate = ViewBindings.findChildViewById(rootView, id);
      if (layoutCustomTemplate == null) {
        break missingId;
      }

      id = R.id.rb_msg_type_markdown;
      RadioButton rbMsgTypeMarkdown = ViewBindings.findChildViewById(rootView, id);
      if (rbMsgTypeMarkdown == null) {
        break missingId;
      }

      id = R.id.rb_msg_type_text;
      RadioButton rbMsgTypeText = ViewBindings.findChildViewById(rootView, id);
      if (rbMsgTypeText == null) {
        break missingId;
      }

      id = R.id.rg_msg_type;
      RadioGroup rgMsgType = ViewBindings.findChildViewById(rootView, id);
      if (rgMsgType == null) {
        break missingId;
      }

      id = R.id.sb_at_all;
      SwitchButton sbAtAll = ViewBindings.findChildViewById(rootView, id);
      if (sbAtAll == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      return new FragmentSendersDingtalkGroupRobotBinding((LinearLayout) rootView, btnDel, btnSave,
          btnTest, etAtDingtalkIds, etAtMobiles, etName, etSecret, etTitleTemplate, etToken,
          glTitleTemplate, layoutAtDingtalkIds, layoutAtMobiles, layoutCustomTemplate,
          rbMsgTypeMarkdown, rbMsgTypeText, rgMsgType, sbAtAll, sbEnable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
