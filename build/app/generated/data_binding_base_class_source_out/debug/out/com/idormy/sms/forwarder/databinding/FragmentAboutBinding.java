// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.CountDownButton;
import com.xuexiang.xui.widget.button.SmoothCheckBox;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.textview.supertextview.SuperTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAboutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CountDownButton btnCache;

  @NonNull
  public final CountDownButton btnFrpc;

  @NonNull
  public final CountDownButton btnGitee;

  @NonNull
  public final CountDownButton btnGithub;

  @NonNull
  public final CountDownButton btnUpdate;

  @NonNull
  public final TextView copyright;

  @NonNull
  public final SuperTextView menuCache;

  @NonNull
  public final SuperTextView menuDonation;

  @NonNull
  public final SuperTextView menuFrpc;

  @NonNull
  public final SuperTextView menuJoinPreviewProgram;

  @NonNull
  public final SuperTextView menuPrivacyProtocol;

  @NonNull
  public final SuperTextView menuUserProtocol;

  @NonNull
  public final SuperTextView menuVersion;

  @NonNull
  public final SuperTextView menuWechatMiniprogram;

  @NonNull
  public final SwitchButton sbJoinPreviewProgram;

  @NonNull
  public final SmoothCheckBox scbAutoCheckUpdate;

  @NonNull
  public final TextView tvSlogan;

  private FragmentAboutBinding(@NonNull LinearLayout rootView, @NonNull CountDownButton btnCache,
      @NonNull CountDownButton btnFrpc, @NonNull CountDownButton btnGitee,
      @NonNull CountDownButton btnGithub, @NonNull CountDownButton btnUpdate,
      @NonNull TextView copyright, @NonNull SuperTextView menuCache,
      @NonNull SuperTextView menuDonation, @NonNull SuperTextView menuFrpc,
      @NonNull SuperTextView menuJoinPreviewProgram, @NonNull SuperTextView menuPrivacyProtocol,
      @NonNull SuperTextView menuUserProtocol, @NonNull SuperTextView menuVersion,
      @NonNull SuperTextView menuWechatMiniprogram, @NonNull SwitchButton sbJoinPreviewProgram,
      @NonNull SmoothCheckBox scbAutoCheckUpdate, @NonNull TextView tvSlogan) {
    this.rootView = rootView;
    this.btnCache = btnCache;
    this.btnFrpc = btnFrpc;
    this.btnGitee = btnGitee;
    this.btnGithub = btnGithub;
    this.btnUpdate = btnUpdate;
    this.copyright = copyright;
    this.menuCache = menuCache;
    this.menuDonation = menuDonation;
    this.menuFrpc = menuFrpc;
    this.menuJoinPreviewProgram = menuJoinPreviewProgram;
    this.menuPrivacyProtocol = menuPrivacyProtocol;
    this.menuUserProtocol = menuUserProtocol;
    this.menuVersion = menuVersion;
    this.menuWechatMiniprogram = menuWechatMiniprogram;
    this.sbJoinPreviewProgram = sbJoinPreviewProgram;
    this.scbAutoCheckUpdate = scbAutoCheckUpdate;
    this.tvSlogan = tvSlogan;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cache;
      CountDownButton btnCache = ViewBindings.findChildViewById(rootView, id);
      if (btnCache == null) {
        break missingId;
      }

      id = R.id.btn_frpc;
      CountDownButton btnFrpc = ViewBindings.findChildViewById(rootView, id);
      if (btnFrpc == null) {
        break missingId;
      }

      id = R.id.btn_gitee;
      CountDownButton btnGitee = ViewBindings.findChildViewById(rootView, id);
      if (btnGitee == null) {
        break missingId;
      }

      id = R.id.btn_github;
      CountDownButton btnGithub = ViewBindings.findChildViewById(rootView, id);
      if (btnGithub == null) {
        break missingId;
      }

      id = R.id.btn_update;
      CountDownButton btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.copyright;
      TextView copyright = ViewBindings.findChildViewById(rootView, id);
      if (copyright == null) {
        break missingId;
      }

      id = R.id.menu_cache;
      SuperTextView menuCache = ViewBindings.findChildViewById(rootView, id);
      if (menuCache == null) {
        break missingId;
      }

      id = R.id.menu_donation;
      SuperTextView menuDonation = ViewBindings.findChildViewById(rootView, id);
      if (menuDonation == null) {
        break missingId;
      }

      id = R.id.menu_frpc;
      SuperTextView menuFrpc = ViewBindings.findChildViewById(rootView, id);
      if (menuFrpc == null) {
        break missingId;
      }

      id = R.id.menu_join_preview_program;
      SuperTextView menuJoinPreviewProgram = ViewBindings.findChildViewById(rootView, id);
      if (menuJoinPreviewProgram == null) {
        break missingId;
      }

      id = R.id.menu_privacy_protocol;
      SuperTextView menuPrivacyProtocol = ViewBindings.findChildViewById(rootView, id);
      if (menuPrivacyProtocol == null) {
        break missingId;
      }

      id = R.id.menu_user_protocol;
      SuperTextView menuUserProtocol = ViewBindings.findChildViewById(rootView, id);
      if (menuUserProtocol == null) {
        break missingId;
      }

      id = R.id.menu_version;
      SuperTextView menuVersion = ViewBindings.findChildViewById(rootView, id);
      if (menuVersion == null) {
        break missingId;
      }

      id = R.id.menu_wechat_miniprogram;
      SuperTextView menuWechatMiniprogram = ViewBindings.findChildViewById(rootView, id);
      if (menuWechatMiniprogram == null) {
        break missingId;
      }

      id = R.id.sb_join_preview_program;
      SwitchButton sbJoinPreviewProgram = ViewBindings.findChildViewById(rootView, id);
      if (sbJoinPreviewProgram == null) {
        break missingId;
      }

      id = R.id.scb_auto_check_update;
      SmoothCheckBox scbAutoCheckUpdate = ViewBindings.findChildViewById(rootView, id);
      if (scbAutoCheckUpdate == null) {
        break missingId;
      }

      id = R.id.tv_slogan;
      TextView tvSlogan = ViewBindings.findChildViewById(rootView, id);
      if (tvSlogan == null) {
        break missingId;
      }

      return new FragmentAboutBinding((LinearLayout) rootView, btnCache, btnFrpc, btnGitee,
          btnGithub, btnUpdate, copyright, menuCache, menuDonation, menuFrpc,
          menuJoinPreviewProgram, menuPrivacyProtocol, menuUserProtocol, menuVersion,
          menuWechatMiniprogram, sbJoinPreviewProgram, scbAutoCheckUpdate, tvSlogan);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
