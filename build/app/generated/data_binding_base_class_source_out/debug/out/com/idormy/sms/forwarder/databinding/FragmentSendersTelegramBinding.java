// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersTelegramBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etApiToken;

  @NonNull
  public final MaterialEditText etChatId;

  @NonNull
  public final MaterialEditText etMessageThreadId;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etProxyHost;

  @NonNull
  public final MaterialEditText etProxyPassword;

  @NonNull
  public final MaterialEditText etProxyPort;

  @NonNull
  public final MaterialEditText etProxyUsername;

  @NonNull
  public final LinearLayout layoutProxyAuthenticator;

  @NonNull
  public final LinearLayout layoutProxyHost;

  @NonNull
  public final LinearLayout layoutProxyPort;

  @NonNull
  public final RadioButton rbChatTypeChannel;

  @NonNull
  public final RadioButton rbChatTypeChat;

  @NonNull
  public final RadioButton rbChatTypeForum;

  @NonNull
  public final RadioButton rbChatTypeGroup;

  @NonNull
  public final RadioButton rbMethodGet;

  @NonNull
  public final RadioButton rbMethodPost;

  @NonNull
  public final RadioButton rbParseModeHtml;

  @NonNull
  public final RadioButton rbParseModeMarkdown;

  @NonNull
  public final RadioButton rbParseModeText;

  @NonNull
  public final RadioButton rbProxyHttp;

  @NonNull
  public final RadioButton rbProxyNone;

  @NonNull
  public final RadioButton rbProxySocks;

  @NonNull
  public final RadioGroup rgChatType;

  @NonNull
  public final RadioGroup rgMethod;

  @NonNull
  public final RadioGroup rgParseMode;

  @NonNull
  public final RadioGroup rgProxyType;

  @NonNull
  public final SwitchButton sbEnable;

  @NonNull
  public final SwitchButton sbProxyAuthenticator;

  private FragmentSendersTelegramBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave, @NonNull SuperButton btnTest,
      @NonNull MaterialEditText etApiToken, @NonNull MaterialEditText etChatId,
      @NonNull MaterialEditText etMessageThreadId, @NonNull MaterialEditText etName,
      @NonNull MaterialEditText etProxyHost, @NonNull MaterialEditText etProxyPassword,
      @NonNull MaterialEditText etProxyPort, @NonNull MaterialEditText etProxyUsername,
      @NonNull LinearLayout layoutProxyAuthenticator, @NonNull LinearLayout layoutProxyHost,
      @NonNull LinearLayout layoutProxyPort, @NonNull RadioButton rbChatTypeChannel,
      @NonNull RadioButton rbChatTypeChat, @NonNull RadioButton rbChatTypeForum,
      @NonNull RadioButton rbChatTypeGroup, @NonNull RadioButton rbMethodGet,
      @NonNull RadioButton rbMethodPost, @NonNull RadioButton rbParseModeHtml,
      @NonNull RadioButton rbParseModeMarkdown, @NonNull RadioButton rbParseModeText,
      @NonNull RadioButton rbProxyHttp, @NonNull RadioButton rbProxyNone,
      @NonNull RadioButton rbProxySocks, @NonNull RadioGroup rgChatType,
      @NonNull RadioGroup rgMethod, @NonNull RadioGroup rgParseMode,
      @NonNull RadioGroup rgProxyType, @NonNull SwitchButton sbEnable,
      @NonNull SwitchButton sbProxyAuthenticator) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etApiToken = etApiToken;
    this.etChatId = etChatId;
    this.etMessageThreadId = etMessageThreadId;
    this.etName = etName;
    this.etProxyHost = etProxyHost;
    this.etProxyPassword = etProxyPassword;
    this.etProxyPort = etProxyPort;
    this.etProxyUsername = etProxyUsername;
    this.layoutProxyAuthenticator = layoutProxyAuthenticator;
    this.layoutProxyHost = layoutProxyHost;
    this.layoutProxyPort = layoutProxyPort;
    this.rbChatTypeChannel = rbChatTypeChannel;
    this.rbChatTypeChat = rbChatTypeChat;
    this.rbChatTypeForum = rbChatTypeForum;
    this.rbChatTypeGroup = rbChatTypeGroup;
    this.rbMethodGet = rbMethodGet;
    this.rbMethodPost = rbMethodPost;
    this.rbParseModeHtml = rbParseModeHtml;
    this.rbParseModeMarkdown = rbParseModeMarkdown;
    this.rbParseModeText = rbParseModeText;
    this.rbProxyHttp = rbProxyHttp;
    this.rbProxyNone = rbProxyNone;
    this.rbProxySocks = rbProxySocks;
    this.rgChatType = rgChatType;
    this.rgMethod = rgMethod;
    this.rgParseMode = rgParseMode;
    this.rgProxyType = rgProxyType;
    this.sbEnable = sbEnable;
    this.sbProxyAuthenticator = sbProxyAuthenticator;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersTelegramBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersTelegramBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_telegram, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersTelegramBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_apiToken;
      MaterialEditText etApiToken = ViewBindings.findChildViewById(rootView, id);
      if (etApiToken == null) {
        break missingId;
      }

      id = R.id.et_chatId;
      MaterialEditText etChatId = ViewBindings.findChildViewById(rootView, id);
      if (etChatId == null) {
        break missingId;
      }

      id = R.id.et_messageThreadId;
      MaterialEditText etMessageThreadId = ViewBindings.findChildViewById(rootView, id);
      if (etMessageThreadId == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_proxyHost;
      MaterialEditText etProxyHost = ViewBindings.findChildViewById(rootView, id);
      if (etProxyHost == null) {
        break missingId;
      }

      id = R.id.et_proxyPassword;
      MaterialEditText etProxyPassword = ViewBindings.findChildViewById(rootView, id);
      if (etProxyPassword == null) {
        break missingId;
      }

      id = R.id.et_proxyPort;
      MaterialEditText etProxyPort = ViewBindings.findChildViewById(rootView, id);
      if (etProxyPort == null) {
        break missingId;
      }

      id = R.id.et_proxyUsername;
      MaterialEditText etProxyUsername = ViewBindings.findChildViewById(rootView, id);
      if (etProxyUsername == null) {
        break missingId;
      }

      id = R.id.layoutProxyAuthenticator;
      LinearLayout layoutProxyAuthenticator = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyAuthenticator == null) {
        break missingId;
      }

      id = R.id.layoutProxyHost;
      LinearLayout layoutProxyHost = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyHost == null) {
        break missingId;
      }

      id = R.id.layoutProxyPort;
      LinearLayout layoutProxyPort = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyPort == null) {
        break missingId;
      }

      id = R.id.rb_chat_type_channel;
      RadioButton rbChatTypeChannel = ViewBindings.findChildViewById(rootView, id);
      if (rbChatTypeChannel == null) {
        break missingId;
      }

      id = R.id.rb_chat_type_chat;
      RadioButton rbChatTypeChat = ViewBindings.findChildViewById(rootView, id);
      if (rbChatTypeChat == null) {
        break missingId;
      }

      id = R.id.rb_chat_type_forum;
      RadioButton rbChatTypeForum = ViewBindings.findChildViewById(rootView, id);
      if (rbChatTypeForum == null) {
        break missingId;
      }

      id = R.id.rb_chat_type_group;
      RadioButton rbChatTypeGroup = ViewBindings.findChildViewById(rootView, id);
      if (rbChatTypeGroup == null) {
        break missingId;
      }

      id = R.id.rb_method_get;
      RadioButton rbMethodGet = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodGet == null) {
        break missingId;
      }

      id = R.id.rb_method_post;
      RadioButton rbMethodPost = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodPost == null) {
        break missingId;
      }

      id = R.id.rb_parse_mode_html;
      RadioButton rbParseModeHtml = ViewBindings.findChildViewById(rootView, id);
      if (rbParseModeHtml == null) {
        break missingId;
      }

      id = R.id.rb_parse_mode_markdown;
      RadioButton rbParseModeMarkdown = ViewBindings.findChildViewById(rootView, id);
      if (rbParseModeMarkdown == null) {
        break missingId;
      }

      id = R.id.rb_parse_mode_text;
      RadioButton rbParseModeText = ViewBindings.findChildViewById(rootView, id);
      if (rbParseModeText == null) {
        break missingId;
      }

      id = R.id.rb_proxyHttp;
      RadioButton rbProxyHttp = ViewBindings.findChildViewById(rootView, id);
      if (rbProxyHttp == null) {
        break missingId;
      }

      id = R.id.rb_proxyNone;
      RadioButton rbProxyNone = ViewBindings.findChildViewById(rootView, id);
      if (rbProxyNone == null) {
        break missingId;
      }

      id = R.id.rb_proxySocks;
      RadioButton rbProxySocks = ViewBindings.findChildViewById(rootView, id);
      if (rbProxySocks == null) {
        break missingId;
      }

      id = R.id.rg_chat_type;
      RadioGroup rgChatType = ViewBindings.findChildViewById(rootView, id);
      if (rgChatType == null) {
        break missingId;
      }

      id = R.id.rg_method;
      RadioGroup rgMethod = ViewBindings.findChildViewById(rootView, id);
      if (rgMethod == null) {
        break missingId;
      }

      id = R.id.rg_parse_mode;
      RadioGroup rgParseMode = ViewBindings.findChildViewById(rootView, id);
      if (rgParseMode == null) {
        break missingId;
      }

      id = R.id.rg_proxyType;
      RadioGroup rgProxyType = ViewBindings.findChildViewById(rootView, id);
      if (rgProxyType == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      id = R.id.sb_proxyAuthenticator;
      SwitchButton sbProxyAuthenticator = ViewBindings.findChildViewById(rootView, id);
      if (sbProxyAuthenticator == null) {
        break missingId;
      }

      return new FragmentSendersTelegramBinding((LinearLayout) rootView, btnDel, btnSave, btnTest,
          etApiToken, etChatId, etMessageThreadId, etName, etProxyHost, etProxyPassword,
          etProxyPort, etProxyUsername, layoutProxyAuthenticator, layoutProxyHost, layoutProxyPort,
          rbChatTypeChannel, rbChatTypeChat, rbChatTypeForum, rbChatTypeGroup, rbMethodGet,
          rbMethodPost, rbParseModeHtml, rbParseModeMarkdown, rbParseModeText, rbProxyHttp,
          rbProxyNone, rbProxySocks, rgChatType, rgMethod, rgParseMode, rgProxyType, sbEnable,
          sbProxyAuthenticator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
