// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.layout.XUIFrameLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterRulesCardViewListItemBinding implements ViewBinding {
  @NonNull
  private final XUIFrameLayout rootView;

  @NonNull
  public final XUIFrameLayout cardView;

  @NonNull
  public final ImageView ivCopy;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final ImageView ivRuleImage;

  @NonNull
  public final ImageView ivRuleStatus;

  @NonNull
  public final LinearLayout layoutSenders;

  @NonNull
  public final TextView tvRuleMatch;

  private AdapterRulesCardViewListItemBinding(@NonNull XUIFrameLayout rootView,
      @NonNull XUIFrameLayout cardView, @NonNull ImageView ivCopy, @NonNull ImageView ivDelete,
      @NonNull ImageView ivEdit, @NonNull ImageView ivRuleImage, @NonNull ImageView ivRuleStatus,
      @NonNull LinearLayout layoutSenders, @NonNull TextView tvRuleMatch) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.ivCopy = ivCopy;
    this.ivDelete = ivDelete;
    this.ivEdit = ivEdit;
    this.ivRuleImage = ivRuleImage;
    this.ivRuleStatus = ivRuleStatus;
    this.layoutSenders = layoutSenders;
    this.tvRuleMatch = tvRuleMatch;
  }

  @Override
  @NonNull
  public XUIFrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterRulesCardViewListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterRulesCardViewListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_rules_card_view_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterRulesCardViewListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      XUIFrameLayout cardView = (XUIFrameLayout) rootView;

      id = R.id.iv_copy;
      ImageView ivCopy = ViewBindings.findChildViewById(rootView, id);
      if (ivCopy == null) {
        break missingId;
      }

      id = R.id.iv_delete;
      ImageView ivDelete = ViewBindings.findChildViewById(rootView, id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.iv_edit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.iv_rule_image;
      ImageView ivRuleImage = ViewBindings.findChildViewById(rootView, id);
      if (ivRuleImage == null) {
        break missingId;
      }

      id = R.id.iv_rule_status;
      ImageView ivRuleStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivRuleStatus == null) {
        break missingId;
      }

      id = R.id.layout_Senders;
      LinearLayout layoutSenders = ViewBindings.findChildViewById(rootView, id);
      if (layoutSenders == null) {
        break missingId;
      }

      id = R.id.tv_rule_match;
      TextView tvRuleMatch = ViewBindings.findChildViewById(rootView, id);
      if (tvRuleMatch == null) {
        break missingId;
      }

      return new AdapterRulesCardViewListItemBinding((XUIFrameLayout) rootView, cardView, ivCopy,
          ivDelete, ivEdit, ivRuleImage, ivRuleStatus, layoutSenders, tvRuleMatch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
