// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdapterSenderListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDrag;

  @NonNull
  public final ImageView ivEdit;

  @NonNull
  public final ImageView ivImage;

  @NonNull
  public final ImageView ivRemove;

  @NonNull
  public final ImageView ivStatus;

  @NonNull
  public final TextView tvTitle;

  private AdapterSenderListItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivDrag,
      @NonNull ImageView ivEdit, @NonNull ImageView ivImage, @NonNull ImageView ivRemove,
      @NonNull ImageView ivStatus, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.ivDrag = ivDrag;
    this.ivEdit = ivEdit;
    this.ivImage = ivImage;
    this.ivRemove = ivRemove;
    this.ivStatus = ivStatus;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdapterSenderListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdapterSenderListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.adapter_sender_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdapterSenderListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_drag;
      ImageView ivDrag = ViewBindings.findChildViewById(rootView, id);
      if (ivDrag == null) {
        break missingId;
      }

      id = R.id.iv_edit;
      ImageView ivEdit = ViewBindings.findChildViewById(rootView, id);
      if (ivEdit == null) {
        break missingId;
      }

      id = R.id.iv_image;
      ImageView ivImage = ViewBindings.findChildViewById(rootView, id);
      if (ivImage == null) {
        break missingId;
      }

      id = R.id.iv_remove;
      ImageView ivRemove = ViewBindings.findChildViewById(rootView, id);
      if (ivRemove == null) {
        break missingId;
      }

      id = R.id.iv_status;
      ImageView ivStatus = ViewBindings.findChildViewById(rootView, id);
      if (ivStatus == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new AdapterSenderListItemBinding((LinearLayout) rootView, ivDrag, ivEdit, ivImage,
          ivRemove, ivStatus, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
