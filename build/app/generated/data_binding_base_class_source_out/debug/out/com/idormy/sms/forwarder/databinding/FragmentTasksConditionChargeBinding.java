// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTasksConditionChargeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final RadioButton rbBatteryCharging;

  @NonNull
  public final RadioButton rbBatteryDischarging;

  @NonNull
  public final RadioButton rbBatteryFull;

  @NonNull
  public final RadioButton rbBatteryNotCharging;

  @NonNull
  public final RadioButton rbBatteryUnknown;

  @NonNull
  public final RadioButton rbPluggedAc;

  @NonNull
  public final RadioButton rbPluggedUnlimited;

  @NonNull
  public final RadioButton rbPluggedUsb;

  @NonNull
  public final RadioButton rbPluggedWireless;

  @NonNull
  public final RadioGroup rgPlugged;

  @NonNull
  public final RadioGroup rgStatus;

  @NonNull
  public final TextView tvDescription;

  private FragmentTasksConditionChargeBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave,
      @NonNull RadioButton rbBatteryCharging, @NonNull RadioButton rbBatteryDischarging,
      @NonNull RadioButton rbBatteryFull, @NonNull RadioButton rbBatteryNotCharging,
      @NonNull RadioButton rbBatteryUnknown, @NonNull RadioButton rbPluggedAc,
      @NonNull RadioButton rbPluggedUnlimited, @NonNull RadioButton rbPluggedUsb,
      @NonNull RadioButton rbPluggedWireless, @NonNull RadioGroup rgPlugged,
      @NonNull RadioGroup rgStatus, @NonNull TextView tvDescription) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.rbBatteryCharging = rbBatteryCharging;
    this.rbBatteryDischarging = rbBatteryDischarging;
    this.rbBatteryFull = rbBatteryFull;
    this.rbBatteryNotCharging = rbBatteryNotCharging;
    this.rbBatteryUnknown = rbBatteryUnknown;
    this.rbPluggedAc = rbPluggedAc;
    this.rbPluggedUnlimited = rbPluggedUnlimited;
    this.rbPluggedUsb = rbPluggedUsb;
    this.rbPluggedWireless = rbPluggedWireless;
    this.rgPlugged = rgPlugged;
    this.rgStatus = rgStatus;
    this.tvDescription = tvDescription;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTasksConditionChargeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTasksConditionChargeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tasks_condition_charge, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTasksConditionChargeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.rb_battery_charging;
      RadioButton rbBatteryCharging = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryCharging == null) {
        break missingId;
      }

      id = R.id.rb_battery_discharging;
      RadioButton rbBatteryDischarging = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryDischarging == null) {
        break missingId;
      }

      id = R.id.rb_battery_full;
      RadioButton rbBatteryFull = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryFull == null) {
        break missingId;
      }

      id = R.id.rb_battery_not_charging;
      RadioButton rbBatteryNotCharging = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryNotCharging == null) {
        break missingId;
      }

      id = R.id.rb_battery_unknown;
      RadioButton rbBatteryUnknown = ViewBindings.findChildViewById(rootView, id);
      if (rbBatteryUnknown == null) {
        break missingId;
      }

      id = R.id.rb_plugged_ac;
      RadioButton rbPluggedAc = ViewBindings.findChildViewById(rootView, id);
      if (rbPluggedAc == null) {
        break missingId;
      }

      id = R.id.rb_plugged_unlimited;
      RadioButton rbPluggedUnlimited = ViewBindings.findChildViewById(rootView, id);
      if (rbPluggedUnlimited == null) {
        break missingId;
      }

      id = R.id.rb_plugged_usb;
      RadioButton rbPluggedUsb = ViewBindings.findChildViewById(rootView, id);
      if (rbPluggedUsb == null) {
        break missingId;
      }

      id = R.id.rb_plugged_wireless;
      RadioButton rbPluggedWireless = ViewBindings.findChildViewById(rootView, id);
      if (rbPluggedWireless == null) {
        break missingId;
      }

      id = R.id.rg_plugged;
      RadioGroup rgPlugged = ViewBindings.findChildViewById(rootView, id);
      if (rgPlugged == null) {
        break missingId;
      }

      id = R.id.rg_status;
      RadioGroup rgStatus = ViewBindings.findChildViewById(rootView, id);
      if (rgStatus == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      return new FragmentTasksConditionChargeBinding((LinearLayout) rootView, btnDel, btnSave,
          rbBatteryCharging, rbBatteryDischarging, rbBatteryFull, rbBatteryNotCharging,
          rbBatteryUnknown, rbPluggedAc, rbPluggedUnlimited, rbPluggedUsb, rbPluggedWireless,
          rgPlugged, rgStatus, tvDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
