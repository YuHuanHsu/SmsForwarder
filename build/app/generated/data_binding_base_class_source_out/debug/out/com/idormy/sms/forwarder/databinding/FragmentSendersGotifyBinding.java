// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersGotifyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etPriority;

  @NonNull
  public final MaterialEditText etTitleTemplate;

  @NonNull
  public final MaterialEditText etWebServer;

  @NonNull
  public final GridLayout glTitleTemplate;

  @NonNull
  public final LinearLayout layoutCustomTemplate;

  @NonNull
  public final SwitchButton sbEnable;

  private FragmentSendersGotifyBinding(@NonNull LinearLayout rootView, @NonNull SuperButton btnDel,
      @NonNull SuperButton btnSave, @NonNull SuperButton btnTest, @NonNull MaterialEditText etName,
      @NonNull MaterialEditText etPriority, @NonNull MaterialEditText etTitleTemplate,
      @NonNull MaterialEditText etWebServer, @NonNull GridLayout glTitleTemplate,
      @NonNull LinearLayout layoutCustomTemplate, @NonNull SwitchButton sbEnable) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etName = etName;
    this.etPriority = etPriority;
    this.etTitleTemplate = etTitleTemplate;
    this.etWebServer = etWebServer;
    this.glTitleTemplate = glTitleTemplate;
    this.layoutCustomTemplate = layoutCustomTemplate;
    this.sbEnable = sbEnable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersGotifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersGotifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_gotify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersGotifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_priority;
      MaterialEditText etPriority = ViewBindings.findChildViewById(rootView, id);
      if (etPriority == null) {
        break missingId;
      }

      id = R.id.et_title_template;
      MaterialEditText etTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (etTitleTemplate == null) {
        break missingId;
      }

      id = R.id.et_webServer;
      MaterialEditText etWebServer = ViewBindings.findChildViewById(rootView, id);
      if (etWebServer == null) {
        break missingId;
      }

      id = R.id.gl_title_template;
      GridLayout glTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (glTitleTemplate == null) {
        break missingId;
      }

      id = R.id.layout_custom_template;
      LinearLayout layoutCustomTemplate = ViewBindings.findChildViewById(rootView, id);
      if (layoutCustomTemplate == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      return new FragmentSendersGotifyBinding((LinearLayout) rootView, btnDel, btnSave, btnTest,
          etName, etPriority, etTitleTemplate, etWebServer, glTitleTemplate, layoutCustomTemplate,
          sbEnable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
