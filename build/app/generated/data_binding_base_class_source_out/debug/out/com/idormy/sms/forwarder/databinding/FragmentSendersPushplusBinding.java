// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersPushplusBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etCallbackUrl;

  @NonNull
  public final MaterialEditText etChannel;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etTemplate;

  @NonNull
  public final MaterialEditText etTitleTemplate;

  @NonNull
  public final MaterialEditText etToken;

  @NonNull
  public final MaterialEditText etTopic;

  @NonNull
  public final MaterialEditText etValidTime;

  @NonNull
  public final MaterialEditText etWebhook;

  @NonNull
  public final GridLayout glTitleTemplate;

  @NonNull
  public final LinearLayout layoutCustomTemplate;

  @NonNull
  public final LinearLayout layoutPlusOne;

  @NonNull
  public final LinearLayout layoutPlusTwo;

  @NonNull
  public final RadioButton rbWebsiteHxtrip;

  @NonNull
  public final RadioButton rbWebsitePlus;

  @NonNull
  public final RadioGroup rgWebsite;

  @NonNull
  public final SwitchButton sbEnable;

  private FragmentSendersPushplusBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave, @NonNull SuperButton btnTest,
      @NonNull MaterialEditText etCallbackUrl, @NonNull MaterialEditText etChannel,
      @NonNull MaterialEditText etName, @NonNull MaterialEditText etTemplate,
      @NonNull MaterialEditText etTitleTemplate, @NonNull MaterialEditText etToken,
      @NonNull MaterialEditText etTopic, @NonNull MaterialEditText etValidTime,
      @NonNull MaterialEditText etWebhook, @NonNull GridLayout glTitleTemplate,
      @NonNull LinearLayout layoutCustomTemplate, @NonNull LinearLayout layoutPlusOne,
      @NonNull LinearLayout layoutPlusTwo, @NonNull RadioButton rbWebsiteHxtrip,
      @NonNull RadioButton rbWebsitePlus, @NonNull RadioGroup rgWebsite,
      @NonNull SwitchButton sbEnable) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etCallbackUrl = etCallbackUrl;
    this.etChannel = etChannel;
    this.etName = etName;
    this.etTemplate = etTemplate;
    this.etTitleTemplate = etTitleTemplate;
    this.etToken = etToken;
    this.etTopic = etTopic;
    this.etValidTime = etValidTime;
    this.etWebhook = etWebhook;
    this.glTitleTemplate = glTitleTemplate;
    this.layoutCustomTemplate = layoutCustomTemplate;
    this.layoutPlusOne = layoutPlusOne;
    this.layoutPlusTwo = layoutPlusTwo;
    this.rbWebsiteHxtrip = rbWebsiteHxtrip;
    this.rbWebsitePlus = rbWebsitePlus;
    this.rgWebsite = rgWebsite;
    this.sbEnable = sbEnable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersPushplusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersPushplusBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_pushplus, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersPushplusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_callbackUrl;
      MaterialEditText etCallbackUrl = ViewBindings.findChildViewById(rootView, id);
      if (etCallbackUrl == null) {
        break missingId;
      }

      id = R.id.et_channel;
      MaterialEditText etChannel = ViewBindings.findChildViewById(rootView, id);
      if (etChannel == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_template;
      MaterialEditText etTemplate = ViewBindings.findChildViewById(rootView, id);
      if (etTemplate == null) {
        break missingId;
      }

      id = R.id.et_title_template;
      MaterialEditText etTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (etTitleTemplate == null) {
        break missingId;
      }

      id = R.id.et_token;
      MaterialEditText etToken = ViewBindings.findChildViewById(rootView, id);
      if (etToken == null) {
        break missingId;
      }

      id = R.id.et_topic;
      MaterialEditText etTopic = ViewBindings.findChildViewById(rootView, id);
      if (etTopic == null) {
        break missingId;
      }

      id = R.id.et_validTime;
      MaterialEditText etValidTime = ViewBindings.findChildViewById(rootView, id);
      if (etValidTime == null) {
        break missingId;
      }

      id = R.id.et_webhook;
      MaterialEditText etWebhook = ViewBindings.findChildViewById(rootView, id);
      if (etWebhook == null) {
        break missingId;
      }

      id = R.id.gl_title_template;
      GridLayout glTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (glTitleTemplate == null) {
        break missingId;
      }

      id = R.id.layout_custom_template;
      LinearLayout layoutCustomTemplate = ViewBindings.findChildViewById(rootView, id);
      if (layoutCustomTemplate == null) {
        break missingId;
      }

      id = R.id.layout_plus_one;
      LinearLayout layoutPlusOne = ViewBindings.findChildViewById(rootView, id);
      if (layoutPlusOne == null) {
        break missingId;
      }

      id = R.id.layout_plus_two;
      LinearLayout layoutPlusTwo = ViewBindings.findChildViewById(rootView, id);
      if (layoutPlusTwo == null) {
        break missingId;
      }

      id = R.id.rb_website_hxtrip;
      RadioButton rbWebsiteHxtrip = ViewBindings.findChildViewById(rootView, id);
      if (rbWebsiteHxtrip == null) {
        break missingId;
      }

      id = R.id.rb_website_plus;
      RadioButton rbWebsitePlus = ViewBindings.findChildViewById(rootView, id);
      if (rbWebsitePlus == null) {
        break missingId;
      }

      id = R.id.rg_website;
      RadioGroup rgWebsite = ViewBindings.findChildViewById(rootView, id);
      if (rgWebsite == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      return new FragmentSendersPushplusBinding((LinearLayout) rootView, btnDel, btnSave, btnTest,
          etCallbackUrl, etChannel, etName, etTemplate, etTitleTemplate, etToken, etTopic,
          etValidTime, etWebhook, glTitleTemplate, layoutCustomTemplate, layoutPlusOne,
          layoutPlusTwo, rbWebsiteHxtrip, rbWebsitePlus, rgWebsite, sbEnable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
