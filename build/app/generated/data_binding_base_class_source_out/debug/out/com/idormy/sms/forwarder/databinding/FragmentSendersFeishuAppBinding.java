// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.ClearEditText;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersFeishuAppBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etAppId;

  @NonNull
  public final MaterialEditText etAppSecret;

  @NonNull
  public final ClearEditText etMessageCard;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etReceiveId;

  @NonNull
  public final MaterialEditText etTitleTemplate;

  @NonNull
  public final GridLayout glMessageCard;

  @NonNull
  public final GridLayout glTitleTemplate;

  @NonNull
  public final LinearLayout layoutMessageCard;

  @NonNull
  public final LinearLayout layoutTitleTemplate;

  @NonNull
  public final RadioButton rbMsgTypeInteractive;

  @NonNull
  public final RadioButton rbMsgTypeText;

  @NonNull
  public final RadioButton rbReceiveIdTypeChatId;

  @NonNull
  public final RadioButton rbReceiveIdTypeEmail;

  @NonNull
  public final RadioButton rbReceiveIdTypeOpenId;

  @NonNull
  public final RadioButton rbReceiveIdTypeUnionId;

  @NonNull
  public final RadioButton rbReceiveIdTypeUserId;

  @NonNull
  public final RadioGroup rgMsgType;

  @NonNull
  public final RadioGroup rgReceiveIdType;

  @NonNull
  public final SwitchButton sbEnable;

  private FragmentSendersFeishuAppBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave, @NonNull SuperButton btnTest,
      @NonNull MaterialEditText etAppId, @NonNull MaterialEditText etAppSecret,
      @NonNull ClearEditText etMessageCard, @NonNull MaterialEditText etName,
      @NonNull MaterialEditText etReceiveId, @NonNull MaterialEditText etTitleTemplate,
      @NonNull GridLayout glMessageCard, @NonNull GridLayout glTitleTemplate,
      @NonNull LinearLayout layoutMessageCard, @NonNull LinearLayout layoutTitleTemplate,
      @NonNull RadioButton rbMsgTypeInteractive, @NonNull RadioButton rbMsgTypeText,
      @NonNull RadioButton rbReceiveIdTypeChatId, @NonNull RadioButton rbReceiveIdTypeEmail,
      @NonNull RadioButton rbReceiveIdTypeOpenId, @NonNull RadioButton rbReceiveIdTypeUnionId,
      @NonNull RadioButton rbReceiveIdTypeUserId, @NonNull RadioGroup rgMsgType,
      @NonNull RadioGroup rgReceiveIdType, @NonNull SwitchButton sbEnable) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etAppId = etAppId;
    this.etAppSecret = etAppSecret;
    this.etMessageCard = etMessageCard;
    this.etName = etName;
    this.etReceiveId = etReceiveId;
    this.etTitleTemplate = etTitleTemplate;
    this.glMessageCard = glMessageCard;
    this.glTitleTemplate = glTitleTemplate;
    this.layoutMessageCard = layoutMessageCard;
    this.layoutTitleTemplate = layoutTitleTemplate;
    this.rbMsgTypeInteractive = rbMsgTypeInteractive;
    this.rbMsgTypeText = rbMsgTypeText;
    this.rbReceiveIdTypeChatId = rbReceiveIdTypeChatId;
    this.rbReceiveIdTypeEmail = rbReceiveIdTypeEmail;
    this.rbReceiveIdTypeOpenId = rbReceiveIdTypeOpenId;
    this.rbReceiveIdTypeUnionId = rbReceiveIdTypeUnionId;
    this.rbReceiveIdTypeUserId = rbReceiveIdTypeUserId;
    this.rgMsgType = rgMsgType;
    this.rgReceiveIdType = rgReceiveIdType;
    this.sbEnable = sbEnable;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersFeishuAppBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersFeishuAppBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_feishu_app, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersFeishuAppBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_app_id;
      MaterialEditText etAppId = ViewBindings.findChildViewById(rootView, id);
      if (etAppId == null) {
        break missingId;
      }

      id = R.id.et_app_secret;
      MaterialEditText etAppSecret = ViewBindings.findChildViewById(rootView, id);
      if (etAppSecret == null) {
        break missingId;
      }

      id = R.id.et_message_card;
      ClearEditText etMessageCard = ViewBindings.findChildViewById(rootView, id);
      if (etMessageCard == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_receive_id;
      MaterialEditText etReceiveId = ViewBindings.findChildViewById(rootView, id);
      if (etReceiveId == null) {
        break missingId;
      }

      id = R.id.et_title_template;
      MaterialEditText etTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (etTitleTemplate == null) {
        break missingId;
      }

      id = R.id.gl_message_card;
      GridLayout glMessageCard = ViewBindings.findChildViewById(rootView, id);
      if (glMessageCard == null) {
        break missingId;
      }

      id = R.id.gl_title_template;
      GridLayout glTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (glTitleTemplate == null) {
        break missingId;
      }

      id = R.id.layout_message_card;
      LinearLayout layoutMessageCard = ViewBindings.findChildViewById(rootView, id);
      if (layoutMessageCard == null) {
        break missingId;
      }

      id = R.id.layout_title_template;
      LinearLayout layoutTitleTemplate = ViewBindings.findChildViewById(rootView, id);
      if (layoutTitleTemplate == null) {
        break missingId;
      }

      id = R.id.rb_msg_type_interactive;
      RadioButton rbMsgTypeInteractive = ViewBindings.findChildViewById(rootView, id);
      if (rbMsgTypeInteractive == null) {
        break missingId;
      }

      id = R.id.rb_msg_type_text;
      RadioButton rbMsgTypeText = ViewBindings.findChildViewById(rootView, id);
      if (rbMsgTypeText == null) {
        break missingId;
      }

      id = R.id.rb_receive_id_type_chat_id;
      RadioButton rbReceiveIdTypeChatId = ViewBindings.findChildViewById(rootView, id);
      if (rbReceiveIdTypeChatId == null) {
        break missingId;
      }

      id = R.id.rb_receive_id_type_email;
      RadioButton rbReceiveIdTypeEmail = ViewBindings.findChildViewById(rootView, id);
      if (rbReceiveIdTypeEmail == null) {
        break missingId;
      }

      id = R.id.rb_receive_id_type_open_id;
      RadioButton rbReceiveIdTypeOpenId = ViewBindings.findChildViewById(rootView, id);
      if (rbReceiveIdTypeOpenId == null) {
        break missingId;
      }

      id = R.id.rb_receive_id_type_union_id;
      RadioButton rbReceiveIdTypeUnionId = ViewBindings.findChildViewById(rootView, id);
      if (rbReceiveIdTypeUnionId == null) {
        break missingId;
      }

      id = R.id.rb_receive_id_type_user_id;
      RadioButton rbReceiveIdTypeUserId = ViewBindings.findChildViewById(rootView, id);
      if (rbReceiveIdTypeUserId == null) {
        break missingId;
      }

      id = R.id.rg_msg_type;
      RadioGroup rgMsgType = ViewBindings.findChildViewById(rootView, id);
      if (rgMsgType == null) {
        break missingId;
      }

      id = R.id.rg_receive_id_type;
      RadioGroup rgReceiveIdType = ViewBindings.findChildViewById(rootView, id);
      if (rgReceiveIdType == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      return new FragmentSendersFeishuAppBinding((LinearLayout) rootView, btnDel, btnSave, btnTest,
          etAppId, etAppSecret, etMessageCard, etName, etReceiveId, etTitleTemplate, glMessageCard,
          glTitleTemplate, layoutMessageCard, layoutTitleTemplate, rbMsgTypeInteractive,
          rbMsgTypeText, rbReceiveIdTypeChatId, rbReceiveIdTypeEmail, rbReceiveIdTypeOpenId,
          rbReceiveIdTypeUnionId, rbReceiveIdTypeUserId, rgMsgType, rgReceiveIdType, sbEnable);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
