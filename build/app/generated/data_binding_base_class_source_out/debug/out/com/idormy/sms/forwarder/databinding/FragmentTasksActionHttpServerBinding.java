// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTasksActionHttpServerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final RadioButton rbStartServer;

  @NonNull
  public final RadioButton rbStopServer;

  @NonNull
  public final RadioGroup rgHttpServerState;

  @NonNull
  public final SwitchButton sbApiAddContacts;

  @NonNull
  public final SwitchButton sbApiClone;

  @NonNull
  public final SwitchButton sbApiLocation;

  @NonNull
  public final SwitchButton sbApiQueryBattery;

  @NonNull
  public final SwitchButton sbApiQueryCall;

  @NonNull
  public final SwitchButton sbApiQueryContacts;

  @NonNull
  public final SwitchButton sbApiQuerySms;

  @NonNull
  public final SwitchButton sbApiSendSms;

  @NonNull
  public final SwitchButton sbApiWol;

  @NonNull
  public final TextView tvDescription;

  private FragmentTasksActionHttpServerBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave, @NonNull SuperButton btnTest,
      @NonNull RadioButton rbStartServer, @NonNull RadioButton rbStopServer,
      @NonNull RadioGroup rgHttpServerState, @NonNull SwitchButton sbApiAddContacts,
      @NonNull SwitchButton sbApiClone, @NonNull SwitchButton sbApiLocation,
      @NonNull SwitchButton sbApiQueryBattery, @NonNull SwitchButton sbApiQueryCall,
      @NonNull SwitchButton sbApiQueryContacts, @NonNull SwitchButton sbApiQuerySms,
      @NonNull SwitchButton sbApiSendSms, @NonNull SwitchButton sbApiWol,
      @NonNull TextView tvDescription) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.rbStartServer = rbStartServer;
    this.rbStopServer = rbStopServer;
    this.rgHttpServerState = rgHttpServerState;
    this.sbApiAddContacts = sbApiAddContacts;
    this.sbApiClone = sbApiClone;
    this.sbApiLocation = sbApiLocation;
    this.sbApiQueryBattery = sbApiQueryBattery;
    this.sbApiQueryCall = sbApiQueryCall;
    this.sbApiQueryContacts = sbApiQueryContacts;
    this.sbApiQuerySms = sbApiQuerySms;
    this.sbApiSendSms = sbApiSendSms;
    this.sbApiWol = sbApiWol;
    this.tvDescription = tvDescription;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTasksActionHttpServerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTasksActionHttpServerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tasks_action_http_server, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTasksActionHttpServerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.rb_start_server;
      RadioButton rbStartServer = ViewBindings.findChildViewById(rootView, id);
      if (rbStartServer == null) {
        break missingId;
      }

      id = R.id.rb_stop_server;
      RadioButton rbStopServer = ViewBindings.findChildViewById(rootView, id);
      if (rbStopServer == null) {
        break missingId;
      }

      id = R.id.rg_http_server_state;
      RadioGroup rgHttpServerState = ViewBindings.findChildViewById(rootView, id);
      if (rgHttpServerState == null) {
        break missingId;
      }

      id = R.id.sb_api_add_contacts;
      SwitchButton sbApiAddContacts = ViewBindings.findChildViewById(rootView, id);
      if (sbApiAddContacts == null) {
        break missingId;
      }

      id = R.id.sb_api_clone;
      SwitchButton sbApiClone = ViewBindings.findChildViewById(rootView, id);
      if (sbApiClone == null) {
        break missingId;
      }

      id = R.id.sb_api_location;
      SwitchButton sbApiLocation = ViewBindings.findChildViewById(rootView, id);
      if (sbApiLocation == null) {
        break missingId;
      }

      id = R.id.sb_api_query_battery;
      SwitchButton sbApiQueryBattery = ViewBindings.findChildViewById(rootView, id);
      if (sbApiQueryBattery == null) {
        break missingId;
      }

      id = R.id.sb_api_query_call;
      SwitchButton sbApiQueryCall = ViewBindings.findChildViewById(rootView, id);
      if (sbApiQueryCall == null) {
        break missingId;
      }

      id = R.id.sb_api_query_contacts;
      SwitchButton sbApiQueryContacts = ViewBindings.findChildViewById(rootView, id);
      if (sbApiQueryContacts == null) {
        break missingId;
      }

      id = R.id.sb_api_query_sms;
      SwitchButton sbApiQuerySms = ViewBindings.findChildViewById(rootView, id);
      if (sbApiQuerySms == null) {
        break missingId;
      }

      id = R.id.sb_api_send_sms;
      SwitchButton sbApiSendSms = ViewBindings.findChildViewById(rootView, id);
      if (sbApiSendSms == null) {
        break missingId;
      }

      id = R.id.sb_api_wol;
      SwitchButton sbApiWol = ViewBindings.findChildViewById(rootView, id);
      if (sbApiWol == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      return new FragmentTasksActionHttpServerBinding((LinearLayout) rootView, btnDel, btnSave,
          btnTest, rbStartServer, rbStopServer, rgHttpServerState, sbApiAddContacts, sbApiClone,
          sbApiLocation, sbApiQueryBattery, sbApiQueryCall, sbApiQueryContacts, sbApiQuerySms,
          sbApiSendSms, sbApiWol, tvDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
