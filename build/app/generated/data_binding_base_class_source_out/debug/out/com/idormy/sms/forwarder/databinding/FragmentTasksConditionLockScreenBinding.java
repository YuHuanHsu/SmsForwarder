// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.picker.XSeekBar;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentTasksConditionLockScreenBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final LinearLayout layoutCheckAgain;

  @NonNull
  public final RadioButton rbActionScreenLocked;

  @NonNull
  public final RadioButton rbActionScreenOff;

  @NonNull
  public final RadioButton rbActionScreenOn;

  @NonNull
  public final RadioButton rbActionScreenUnlocked;

  @NonNull
  public final RadioGroup rgAction;

  @NonNull
  public final SwitchButton sbCheckAgain;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final XSeekBar xsbTimeAfterScreenLocked;

  @NonNull
  public final XSeekBar xsbTimeAfterScreenOff;

  @NonNull
  public final XSeekBar xsbTimeAfterScreenOn;

  @NonNull
  public final XSeekBar xsbTimeAfterScreenUnlocked;

  private FragmentTasksConditionLockScreenBinding(@NonNull LinearLayout rootView,
      @NonNull SuperButton btnDel, @NonNull SuperButton btnSave,
      @NonNull LinearLayout layoutCheckAgain, @NonNull RadioButton rbActionScreenLocked,
      @NonNull RadioButton rbActionScreenOff, @NonNull RadioButton rbActionScreenOn,
      @NonNull RadioButton rbActionScreenUnlocked, @NonNull RadioGroup rgAction,
      @NonNull SwitchButton sbCheckAgain, @NonNull TextView tvDescription,
      @NonNull XSeekBar xsbTimeAfterScreenLocked, @NonNull XSeekBar xsbTimeAfterScreenOff,
      @NonNull XSeekBar xsbTimeAfterScreenOn, @NonNull XSeekBar xsbTimeAfterScreenUnlocked) {
    this.rootView = rootView;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.layoutCheckAgain = layoutCheckAgain;
    this.rbActionScreenLocked = rbActionScreenLocked;
    this.rbActionScreenOff = rbActionScreenOff;
    this.rbActionScreenOn = rbActionScreenOn;
    this.rbActionScreenUnlocked = rbActionScreenUnlocked;
    this.rgAction = rgAction;
    this.sbCheckAgain = sbCheckAgain;
    this.tvDescription = tvDescription;
    this.xsbTimeAfterScreenLocked = xsbTimeAfterScreenLocked;
    this.xsbTimeAfterScreenOff = xsbTimeAfterScreenOff;
    this.xsbTimeAfterScreenOn = xsbTimeAfterScreenOn;
    this.xsbTimeAfterScreenUnlocked = xsbTimeAfterScreenUnlocked;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTasksConditionLockScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTasksConditionLockScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tasks_condition_lock_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTasksConditionLockScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.layout_check_again;
      LinearLayout layoutCheckAgain = ViewBindings.findChildViewById(rootView, id);
      if (layoutCheckAgain == null) {
        break missingId;
      }

      id = R.id.rb_action_screen_locked;
      RadioButton rbActionScreenLocked = ViewBindings.findChildViewById(rootView, id);
      if (rbActionScreenLocked == null) {
        break missingId;
      }

      id = R.id.rb_action_screen_off;
      RadioButton rbActionScreenOff = ViewBindings.findChildViewById(rootView, id);
      if (rbActionScreenOff == null) {
        break missingId;
      }

      id = R.id.rb_action_screen_on;
      RadioButton rbActionScreenOn = ViewBindings.findChildViewById(rootView, id);
      if (rbActionScreenOn == null) {
        break missingId;
      }

      id = R.id.rb_action_screen_unlocked;
      RadioButton rbActionScreenUnlocked = ViewBindings.findChildViewById(rootView, id);
      if (rbActionScreenUnlocked == null) {
        break missingId;
      }

      id = R.id.rg_action;
      RadioGroup rgAction = ViewBindings.findChildViewById(rootView, id);
      if (rgAction == null) {
        break missingId;
      }

      id = R.id.sb_check_again;
      SwitchButton sbCheckAgain = ViewBindings.findChildViewById(rootView, id);
      if (sbCheckAgain == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.xsb_time_after_screen_locked;
      XSeekBar xsbTimeAfterScreenLocked = ViewBindings.findChildViewById(rootView, id);
      if (xsbTimeAfterScreenLocked == null) {
        break missingId;
      }

      id = R.id.xsb_time_after_screen_off;
      XSeekBar xsbTimeAfterScreenOff = ViewBindings.findChildViewById(rootView, id);
      if (xsbTimeAfterScreenOff == null) {
        break missingId;
      }

      id = R.id.xsb_time_after_screen_on;
      XSeekBar xsbTimeAfterScreenOn = ViewBindings.findChildViewById(rootView, id);
      if (xsbTimeAfterScreenOn == null) {
        break missingId;
      }

      id = R.id.xsb_time_after_screen_unlocked;
      XSeekBar xsbTimeAfterScreenUnlocked = ViewBindings.findChildViewById(rootView, id);
      if (xsbTimeAfterScreenUnlocked == null) {
        break missingId;
      }

      return new FragmentTasksConditionLockScreenBinding((LinearLayout) rootView, btnDel, btnSave,
          layoutCheckAgain, rbActionScreenLocked, rbActionScreenOff, rbActionScreenOn,
          rbActionScreenUnlocked, rgAction, sbCheckAgain, tvDescription, xsbTimeAfterScreenLocked,
          xsbTimeAfterScreenOff, xsbTimeAfterScreenOn, xsbTimeAfterScreenUnlocked);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
