// Generated by view binder compiler. Do not edit!
package com.idormy.sms.forwarder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.idormy.sms.forwarder.R;
import com.xuexiang.xui.widget.button.switchbutton.SwitchButton;
import com.xuexiang.xui.widget.edittext.ClearEditText;
import com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;
import com.xuexiang.xui.widget.textview.supertextview.SuperButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSendersWebhookBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnAddHeader;

  @NonNull
  public final SuperButton btnDel;

  @NonNull
  public final SuperButton btnSave;

  @NonNull
  public final SuperButton btnTest;

  @NonNull
  public final MaterialEditText etName;

  @NonNull
  public final MaterialEditText etProxyHost;

  @NonNull
  public final MaterialEditText etProxyPassword;

  @NonNull
  public final MaterialEditText etProxyPort;

  @NonNull
  public final MaterialEditText etProxyUsername;

  @NonNull
  public final MaterialEditText etResponse;

  @NonNull
  public final MaterialEditText etSecret;

  @NonNull
  public final ClearEditText etWebParams;

  @NonNull
  public final MaterialEditText etWebServer;

  @NonNull
  public final LinearLayout layoutHeaders;

  @NonNull
  public final LinearLayout layoutProxyAuthenticator;

  @NonNull
  public final LinearLayout layoutProxyHost;

  @NonNull
  public final LinearLayout layoutProxyPort;

  @NonNull
  public final RadioButton rbMethodGet;

  @NonNull
  public final RadioButton rbMethodPatch;

  @NonNull
  public final RadioButton rbMethodPost;

  @NonNull
  public final RadioButton rbMethodPut;

  @NonNull
  public final RadioButton rbProxyHttp;

  @NonNull
  public final RadioButton rbProxyNone;

  @NonNull
  public final RadioButton rbProxySocks;

  @NonNull
  public final RadioGroup rgMethod;

  @NonNull
  public final RadioGroup rgProxyType;

  @NonNull
  public final SwitchButton sbEnable;

  @NonNull
  public final SwitchButton sbProxyAuthenticator;

  private FragmentSendersWebhookBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView btnAddHeader, @NonNull SuperButton btnDel, @NonNull SuperButton btnSave,
      @NonNull SuperButton btnTest, @NonNull MaterialEditText etName,
      @NonNull MaterialEditText etProxyHost, @NonNull MaterialEditText etProxyPassword,
      @NonNull MaterialEditText etProxyPort, @NonNull MaterialEditText etProxyUsername,
      @NonNull MaterialEditText etResponse, @NonNull MaterialEditText etSecret,
      @NonNull ClearEditText etWebParams, @NonNull MaterialEditText etWebServer,
      @NonNull LinearLayout layoutHeaders, @NonNull LinearLayout layoutProxyAuthenticator,
      @NonNull LinearLayout layoutProxyHost, @NonNull LinearLayout layoutProxyPort,
      @NonNull RadioButton rbMethodGet, @NonNull RadioButton rbMethodPatch,
      @NonNull RadioButton rbMethodPost, @NonNull RadioButton rbMethodPut,
      @NonNull RadioButton rbProxyHttp, @NonNull RadioButton rbProxyNone,
      @NonNull RadioButton rbProxySocks, @NonNull RadioGroup rgMethod,
      @NonNull RadioGroup rgProxyType, @NonNull SwitchButton sbEnable,
      @NonNull SwitchButton sbProxyAuthenticator) {
    this.rootView = rootView;
    this.btnAddHeader = btnAddHeader;
    this.btnDel = btnDel;
    this.btnSave = btnSave;
    this.btnTest = btnTest;
    this.etName = etName;
    this.etProxyHost = etProxyHost;
    this.etProxyPassword = etProxyPassword;
    this.etProxyPort = etProxyPort;
    this.etProxyUsername = etProxyUsername;
    this.etResponse = etResponse;
    this.etSecret = etSecret;
    this.etWebParams = etWebParams;
    this.etWebServer = etWebServer;
    this.layoutHeaders = layoutHeaders;
    this.layoutProxyAuthenticator = layoutProxyAuthenticator;
    this.layoutProxyHost = layoutProxyHost;
    this.layoutProxyPort = layoutProxyPort;
    this.rbMethodGet = rbMethodGet;
    this.rbMethodPatch = rbMethodPatch;
    this.rbMethodPost = rbMethodPost;
    this.rbMethodPut = rbMethodPut;
    this.rbProxyHttp = rbProxyHttp;
    this.rbProxyNone = rbProxyNone;
    this.rbProxySocks = rbProxySocks;
    this.rgMethod = rgMethod;
    this.rgProxyType = rgProxyType;
    this.sbEnable = sbEnable;
    this.sbProxyAuthenticator = sbProxyAuthenticator;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSendersWebhookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSendersWebhookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_senders_webhook, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSendersWebhookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_header;
      ImageView btnAddHeader = ViewBindings.findChildViewById(rootView, id);
      if (btnAddHeader == null) {
        break missingId;
      }

      id = R.id.btn_del;
      SuperButton btnDel = ViewBindings.findChildViewById(rootView, id);
      if (btnDel == null) {
        break missingId;
      }

      id = R.id.btn_save;
      SuperButton btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.btn_test;
      SuperButton btnTest = ViewBindings.findChildViewById(rootView, id);
      if (btnTest == null) {
        break missingId;
      }

      id = R.id.et_name;
      MaterialEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_proxyHost;
      MaterialEditText etProxyHost = ViewBindings.findChildViewById(rootView, id);
      if (etProxyHost == null) {
        break missingId;
      }

      id = R.id.et_proxyPassword;
      MaterialEditText etProxyPassword = ViewBindings.findChildViewById(rootView, id);
      if (etProxyPassword == null) {
        break missingId;
      }

      id = R.id.et_proxyPort;
      MaterialEditText etProxyPort = ViewBindings.findChildViewById(rootView, id);
      if (etProxyPort == null) {
        break missingId;
      }

      id = R.id.et_proxyUsername;
      MaterialEditText etProxyUsername = ViewBindings.findChildViewById(rootView, id);
      if (etProxyUsername == null) {
        break missingId;
      }

      id = R.id.et_Response;
      MaterialEditText etResponse = ViewBindings.findChildViewById(rootView, id);
      if (etResponse == null) {
        break missingId;
      }

      id = R.id.et_Secret;
      MaterialEditText etSecret = ViewBindings.findChildViewById(rootView, id);
      if (etSecret == null) {
        break missingId;
      }

      id = R.id.et_webParams;
      ClearEditText etWebParams = ViewBindings.findChildViewById(rootView, id);
      if (etWebParams == null) {
        break missingId;
      }

      id = R.id.et_webServer;
      MaterialEditText etWebServer = ViewBindings.findChildViewById(rootView, id);
      if (etWebServer == null) {
        break missingId;
      }

      id = R.id.layout_Headers;
      LinearLayout layoutHeaders = ViewBindings.findChildViewById(rootView, id);
      if (layoutHeaders == null) {
        break missingId;
      }

      id = R.id.layoutProxyAuthenticator;
      LinearLayout layoutProxyAuthenticator = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyAuthenticator == null) {
        break missingId;
      }

      id = R.id.layoutProxyHost;
      LinearLayout layoutProxyHost = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyHost == null) {
        break missingId;
      }

      id = R.id.layoutProxyPort;
      LinearLayout layoutProxyPort = ViewBindings.findChildViewById(rootView, id);
      if (layoutProxyPort == null) {
        break missingId;
      }

      id = R.id.rb_method_get;
      RadioButton rbMethodGet = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodGet == null) {
        break missingId;
      }

      id = R.id.rb_method_patch;
      RadioButton rbMethodPatch = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodPatch == null) {
        break missingId;
      }

      id = R.id.rb_method_post;
      RadioButton rbMethodPost = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodPost == null) {
        break missingId;
      }

      id = R.id.rb_method_put;
      RadioButton rbMethodPut = ViewBindings.findChildViewById(rootView, id);
      if (rbMethodPut == null) {
        break missingId;
      }

      id = R.id.rb_proxyHttp;
      RadioButton rbProxyHttp = ViewBindings.findChildViewById(rootView, id);
      if (rbProxyHttp == null) {
        break missingId;
      }

      id = R.id.rb_proxyNone;
      RadioButton rbProxyNone = ViewBindings.findChildViewById(rootView, id);
      if (rbProxyNone == null) {
        break missingId;
      }

      id = R.id.rb_proxySocks;
      RadioButton rbProxySocks = ViewBindings.findChildViewById(rootView, id);
      if (rbProxySocks == null) {
        break missingId;
      }

      id = R.id.rg_method;
      RadioGroup rgMethod = ViewBindings.findChildViewById(rootView, id);
      if (rgMethod == null) {
        break missingId;
      }

      id = R.id.rg_proxyType;
      RadioGroup rgProxyType = ViewBindings.findChildViewById(rootView, id);
      if (rgProxyType == null) {
        break missingId;
      }

      id = R.id.sb_enable;
      SwitchButton sbEnable = ViewBindings.findChildViewById(rootView, id);
      if (sbEnable == null) {
        break missingId;
      }

      id = R.id.sb_proxyAuthenticator;
      SwitchButton sbProxyAuthenticator = ViewBindings.findChildViewById(rootView, id);
      if (sbProxyAuthenticator == null) {
        break missingId;
      }

      return new FragmentSendersWebhookBinding((LinearLayout) rootView, btnAddHeader, btnDel,
          btnSave, btnTest, etName, etProxyHost, etProxyPassword, etProxyPort, etProxyUsername,
          etResponse, etSecret, etWebParams, etWebServer, layoutHeaders, layoutProxyAuthenticator,
          layoutProxyHost, layoutProxyPort, rbMethodGet, rbMethodPatch, rbMethodPost, rbMethodPut,
          rbProxyHttp, rbProxyNone, rbProxySocks, rgMethod, rgProxyType, sbEnable,
          sbProxyAuthenticator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
