package com.idormy.sms.forwarder.server.controller;

import com.yanzhenjie.andserver.framework.cross.CrossOrigin;
import com.yanzhenjie.andserver.framework.handler.MappingAdapter;
import com.yanzhenjie.andserver.framework.handler.RequestHandler;
import com.yanzhenjie.andserver.framework.mapping.Addition;
import com.yanzhenjie.andserver.framework.mapping.Mapping;
import com.yanzhenjie.andserver.framework.mapping.Method;
import com.yanzhenjie.andserver.framework.mapping.Path;
import com.yanzhenjie.andserver.http.HttpMethod;
import java.lang.Override;
import java.util.LinkedHashMap;
import java.util.Map;

/**
 * This file was generated by AndServer automatically and you should NOT edit it.
 */
public final class ConfigControllerAdapter extends MappingAdapter {
  private ConfigController mHost;

  private Map<Mapping, RequestHandler> mMappingMap;

  public ConfigControllerAdapter() {
    this.mHost = new ConfigController();
    this.mMappingMap = new LinkedHashMap<>();

     {
      Mapping mapping = new Mapping();

      Path path = new Path();
      path.addRule("/config/query/");
      path.addRule("/config/query");
      mapping.setPath(path);

      Method method = new Method();
      method.addRule("POST");
      mapping.setMethod(method);

      Addition addition = new Addition();

      CrossOrigin crossOrigin = new CrossOrigin();

      String[] origins = new String[]{};
      crossOrigin.setOrigins(origins);

      String[] allowedHeaders = new String[]{};
      crossOrigin.setAllowedHeaders(allowedHeaders);

      String[] exposedHeaders = new String[]{};
      crossOrigin.setExposedHeaders(exposedHeaders);

      HttpMethod[] methods = new HttpMethod[]{HttpMethod.POST};
      crossOrigin.setMethods(methods);

      crossOrigin.setAllowCredentials(true);
      crossOrigin.setMaxAge(1800);
      ConfigControllerTestHandler handler = new ConfigControllerTestHandler(mHost, mapping, addition, crossOrigin);
      mMappingMap.put(mapping, handler);
    }
  }

  @Override
  protected Map<Mapping, RequestHandler> getMappingMap() {
    return mMappingMap;
  }

  @Override
  protected ConfigController getHost() {
    return mHost;
  }
}
