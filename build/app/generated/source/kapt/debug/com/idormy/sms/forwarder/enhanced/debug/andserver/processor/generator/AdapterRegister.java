package com.idormy.sms.forwarder.enhanced.debug.andserver.processor.generator;

import android.content.Context;
import com.idormy.sms.forwarder.server.controller.BatteryControllerAdapter;
import com.idormy.sms.forwarder.server.controller.CallControllerAdapter;
import com.idormy.sms.forwarder.server.controller.CloneControllerAdapter;
import com.idormy.sms.forwarder.server.controller.ConfigControllerAdapter;
import com.idormy.sms.forwarder.server.controller.ContactControllerAdapter;
import com.idormy.sms.forwarder.server.controller.LocationControllerAdapter;
import com.idormy.sms.forwarder.server.controller.SmsControllerAdapter;
import com.idormy.sms.forwarder.server.controller.WolControllerAdapter;
import com.yanzhenjie.andserver.framework.handler.HandlerAdapter;
import com.yanzhenjie.andserver.register.OnRegister;
import com.yanzhenjie.andserver.register.Register;
import java.lang.Override;
import java.lang.String;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * This file was generated by AndServer automatically and you should NOT edit it.
 */
public final class AdapterRegister implements OnRegister {
  private Map<String, List<HandlerAdapter>> mMap;

  public AdapterRegister() {
    this.mMap = new HashMap<>();
    List<HandlerAdapter> defaultList = new ArrayList<>();
    defaultList.add(new CloneControllerAdapter());
    defaultList.add(new WolControllerAdapter());
    defaultList.add(new ConfigControllerAdapter());
    defaultList.add(new LocationControllerAdapter());
    defaultList.add(new BatteryControllerAdapter());
    defaultList.add(new SmsControllerAdapter());
    defaultList.add(new ContactControllerAdapter());
    defaultList.add(new CallControllerAdapter());
    this.mMap.put("default", defaultList);
  }

  @Override
  public void onRegister(Context context, String group, Register register) {
    List<HandlerAdapter> list = mMap.get(group);
    if(list == null) {
      list = new ArrayList<>();
    }
    List<HandlerAdapter> defaultList = mMap.get("default");
    if(defaultList != null && !defaultList.isEmpty()) {
      list.addAll(defaultList);
    }
    if(list != null && !list.isEmpty()) {
      for (HandlerAdapter adapter : list) {
        register.addAdapter(adapter);
      }
    }
  }
}
