package com.idormy.sms.forwarder.server.controller;

import android.content.Context;
import com.idormy.sms.forwarder.entity.ContactInfo;
import com.idormy.sms.forwarder.server.model.BaseRequest;
import com.yanzhenjie.andserver.error.BodyMissingException;
import com.yanzhenjie.andserver.framework.MessageConverter;
import com.yanzhenjie.andserver.framework.cross.CrossOrigin;
import com.yanzhenjie.andserver.framework.handler.MappingHandler;
import com.yanzhenjie.andserver.framework.mapping.Addition;
import com.yanzhenjie.andserver.framework.mapping.Mapping;
import com.yanzhenjie.andserver.framework.view.ObjectView;
import com.yanzhenjie.andserver.framework.view.View;
import com.yanzhenjie.andserver.http.HttpMethod;
import com.yanzhenjie.andserver.http.HttpRequest;
import com.yanzhenjie.andserver.http.HttpResponse;
import com.yanzhenjie.andserver.http.RequestBody;
import com.yanzhenjie.andserver.http.multipart.MultipartRequest;
import com.yanzhenjie.andserver.util.MediaType;
import com.yanzhenjie.andserver.util.TypeWrapper;
import java.io.InputStream;
import java.lang.Object;
import java.lang.Override;
import java.lang.Throwable;
import java.lang.reflect.Type;
import java.util.Map;

/**
 * This file was generated by AndServer automatically and you should NOT edit it.
 */
public final class ContactControllerAddHandler extends MappingHandler {
  private Object mHost;

  public ContactControllerAddHandler(Object host, Mapping mapping, Addition addition,
      CrossOrigin crossOrigin) {
    super(host, mapping, addition, crossOrigin);
    this.mHost = host;
  }

  @Override
  protected View onHandle(HttpRequest request, HttpResponse response) throws Throwable {
    Context context = (Context)request.getAttribute(HttpRequest.ANDROID_CONTEXT);
    String httpPath = request.getPath();
    HttpMethod httpMethod = request.getMethod();

    Object converterObj = request.getAttribute(HttpRequest.HTTP_MESSAGE_CONVERTER);
    MessageConverter converter = null;
    if (converterObj != null && converterObj instanceof MessageConverter) {
      converter = (MessageConverter)converterObj;
    }

    MultipartRequest multiRequest = null;
    if (request instanceof MultipartRequest) {
      multiRequest = (MultipartRequest) request;
    }

    RequestBody requestBody = null;
    if (httpMethod.allowBody()) {
      requestBody = request.getBody();
    }

    Map<String, String> pathMap = getPathVariable(httpPath);

    /** ---------- Building Parameters ---------- **/ 

    BaseRequest<ContactInfo> body0 = null;
    if (converter != null && requestBody != null) {
      Type body0Type = new TypeWrapper<BaseRequest<ContactInfo>>(){}.getType();
      InputStream stream = requestBody.stream();
      MediaType mimeType = requestBody.contentType();
      body0 = converter.convert(stream, mimeType, body0Type);
    }
    if (body0 == null) {
      throw new BodyMissingException();
    }
    Object o = ((ContactController)mHost).add(body0);
    return new ObjectView(true, o);
  }
}
